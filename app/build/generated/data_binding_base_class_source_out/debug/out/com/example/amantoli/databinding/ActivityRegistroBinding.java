// Generated by view binder compiler. Do not edit!
package com.example.amantoli.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.amantoli.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegistroBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText aMat;

  @NonNull
  public final EditText aPat;

  @NonNull
  public final EditText age;

  @NonNull
  public final EditText birthdate;

  @NonNull
  public final Button buttonCancelar;

  @NonNull
  public final Button buttonRegistrar;

  @NonNull
  public final EditText email;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final EditText name;

  @NonNull
  public final EditText password;

  @NonNull
  public final RadioButton radioFemenino;

  @NonNull
  public final RadioGroup radioGenero;

  @NonNull
  public final RadioButton radioMasculino;

  @NonNull
  public final RadioButton radioOtro;

  @NonNull
  public final TextView registro;

  private ActivityRegistroBinding(@NonNull ConstraintLayout rootView, @NonNull EditText aMat,
      @NonNull EditText aPat, @NonNull EditText age, @NonNull EditText birthdate,
      @NonNull Button buttonCancelar, @NonNull Button buttonRegistrar, @NonNull EditText email,
      @NonNull ConstraintLayout main, @NonNull EditText name, @NonNull EditText password,
      @NonNull RadioButton radioFemenino, @NonNull RadioGroup radioGenero,
      @NonNull RadioButton radioMasculino, @NonNull RadioButton radioOtro,
      @NonNull TextView registro) {
    this.rootView = rootView;
    this.aMat = aMat;
    this.aPat = aPat;
    this.age = age;
    this.birthdate = birthdate;
    this.buttonCancelar = buttonCancelar;
    this.buttonRegistrar = buttonRegistrar;
    this.email = email;
    this.main = main;
    this.name = name;
    this.password = password;
    this.radioFemenino = radioFemenino;
    this.radioGenero = radioGenero;
    this.radioMasculino = radioMasculino;
    this.radioOtro = radioOtro;
    this.registro = registro;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegistroBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegistroBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_registro, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegistroBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aMat;
      EditText aMat = ViewBindings.findChildViewById(rootView, id);
      if (aMat == null) {
        break missingId;
      }

      id = R.id.aPat;
      EditText aPat = ViewBindings.findChildViewById(rootView, id);
      if (aPat == null) {
        break missingId;
      }

      id = R.id.age;
      EditText age = ViewBindings.findChildViewById(rootView, id);
      if (age == null) {
        break missingId;
      }

      id = R.id.birthdate;
      EditText birthdate = ViewBindings.findChildViewById(rootView, id);
      if (birthdate == null) {
        break missingId;
      }

      id = R.id.button_cancelar;
      Button buttonCancelar = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancelar == null) {
        break missingId;
      }

      id = R.id.button_Registrar;
      Button buttonRegistrar = ViewBindings.findChildViewById(rootView, id);
      if (buttonRegistrar == null) {
        break missingId;
      }

      id = R.id.email;
      EditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.radioFemenino;
      RadioButton radioFemenino = ViewBindings.findChildViewById(rootView, id);
      if (radioFemenino == null) {
        break missingId;
      }

      id = R.id.radioGenero;
      RadioGroup radioGenero = ViewBindings.findChildViewById(rootView, id);
      if (radioGenero == null) {
        break missingId;
      }

      id = R.id.radioMasculino;
      RadioButton radioMasculino = ViewBindings.findChildViewById(rootView, id);
      if (radioMasculino == null) {
        break missingId;
      }

      id = R.id.radioOtro;
      RadioButton radioOtro = ViewBindings.findChildViewById(rootView, id);
      if (radioOtro == null) {
        break missingId;
      }

      id = R.id.registro;
      TextView registro = ViewBindings.findChildViewById(rootView, id);
      if (registro == null) {
        break missingId;
      }

      return new ActivityRegistroBinding((ConstraintLayout) rootView, aMat, aPat, age, birthdate,
          buttonCancelar, buttonRegistrar, email, main, name, password, radioFemenino, radioGenero,
          radioMasculino, radioOtro, registro);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
